// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: order_detail.proto

package protoc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OrderDetailClient is the client API for OrderDetail service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrderDetailClient interface {
	GetOrderDetail(ctx context.Context, in *OrderDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error)
}

type orderDetailClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderDetailClient(cc grpc.ClientConnInterface) OrderDetailClient {
	return &orderDetailClient{cc}
}

func (c *orderDetailClient) GetOrderDetail(ctx context.Context, in *OrderDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error) {
	out := new(OrderDetailResponse)
	err := c.cc.Invoke(ctx, "/order_list.order_detail/getOrderDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderDetailServer is the server API for OrderDetail service.
// All implementations must embed UnimplementedOrderDetailServer
// for forward compatibility
type OrderDetailServer interface {
	GetOrderDetail(context.Context, *OrderDetailRequest) (*OrderDetailResponse, error)
	mustEmbedUnimplementedOrderDetailServer()
}

// UnimplementedOrderDetailServer must be embedded to have forward compatible implementations.
type UnimplementedOrderDetailServer struct {
}

func (UnimplementedOrderDetailServer) GetOrderDetail(context.Context, *OrderDetailRequest) (*OrderDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderDetail not implemented")
}
func (UnimplementedOrderDetailServer) mustEmbedUnimplementedOrderDetailServer() {}

// UnsafeOrderDetailServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrderDetailServer will
// result in compilation errors.
type UnsafeOrderDetailServer interface {
	mustEmbedUnimplementedOrderDetailServer()
}

func RegisterOrderDetailServer(s grpc.ServiceRegistrar, srv OrderDetailServer) {
	s.RegisterService(&OrderDetail_ServiceDesc, srv)
}

func _OrderDetail_GetOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderDetailServer).GetOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_list.order_detail/getOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderDetailServer).GetOrderDetail(ctx, req.(*OrderDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OrderDetail_ServiceDesc is the grpc.ServiceDesc for OrderDetail service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OrderDetail_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "order_list.order_detail",
	HandlerType: (*OrderDetailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getOrderDetail",
			Handler:    _OrderDetail_GetOrderDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order_detail.proto",
}
